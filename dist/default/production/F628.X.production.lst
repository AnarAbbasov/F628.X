

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jan 15 23:03:15 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.32
    13                           ; Generated 02/02/2021 GMT
    14                           ; 
    15                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F628A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000E                     	;# 
    58  000E                     	;# 
    59  000F                     	;# 
    60  0010                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0015                     	;# 
    64  0015                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  001F                     	;# 
    71  0081                     	;# 
    72  0085                     	;# 
    73  0086                     	;# 
    74  008C                     	;# 
    75  008E                     	;# 
    76  0092                     	;# 
    77  0098                     	;# 
    78  0099                     	;# 
    79  009A                     	;# 
    80  009B                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009F                     	;# 
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  008C                     	;# 
   112  008E                     	;# 
   113  0092                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009F                     	;# 
   121  001F                     _CMCONbits	set	31
   122  0006                     _PORTBbits	set	6
   123  0086                     _TRISBbits	set	134
   124                           
   125                           	psect	cinit
   126  07FE                     start_initialization:	
   127                           ; #config settings
   128                           
   129  07FE                     __initialization:
   130  07FE                     end_of_initialization:	
   131                           ;End of C runtime variable initialization code
   132                           
   133  07FE                     __end_of__initialization:
   134  07FE  0183               	clrf	3
   135  07FF  2EF7               	ljmp	_main	;jump to C main() function
   136                           
   137                           	psect	cstackCOMMON
   138  0070                     __pcstackCOMMON:
   139  0070                     ?_dot:
   140  0070                     ??_dot:	
   141                           ; 1 bytes @ 0x0
   142                           
   143  0070                     ?_dash:	
   144                           ; 1 bytes @ 0x0
   145                           
   146  0070                     ??_dash:	
   147                           ; 1 bytes @ 0x0
   148                           
   149  0070                     ?_main:	
   150                           ; 1 bytes @ 0x0
   151                           
   152                           
   153                           ; 1 bytes @ 0x0
   154  0070                     	ds	3
   155  0073                     ??_main:
   156                           
   157                           ; 1 bytes @ 0x3
   158  0073                     	ds	3
   159                           
   160                           	psect	maintext
   161  06F7                     __pmaintext:	
   162 ;;
   163 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   164 ;;
   165 ;; *************** function _main *****************
   166 ;; Defined at:
   167 ;;		line 51 in file "newmain.c"
   168 ;; Parameters:    Size  Location     Type
   169 ;;		None
   170 ;; Auto vars:     Size  Location     Type
   171 ;;		None
   172 ;; Return value:  Size  Location     Type
   173 ;;                  1    wreg      void 
   174 ;; Registers used:
   175 ;;		wreg, status,2, status,0, pclath, cstack
   176 ;; Tracked objects:
   177 ;;		On entry : B00/0
   178 ;;		On exit  : 0/0
   179 ;;		Unchanged: 0/0
   180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   181 ;;      Params:         0       0       0       0
   182 ;;      Locals:         0       0       0       0
   183 ;;      Temps:          3       0       0       0
   184 ;;      Totals:         3       0       0       0
   185 ;;Total ram usage:        3 bytes
   186 ;; Hardware stack levels required when called: 1
   187 ;; This function calls:
   188 ;;		_dash
   189 ;;		_dot
   190 ;; This function is called by:
   191 ;;		Startup code after reset
   192 ;; This function uses a non-reentrant model
   193 ;;
   194                           
   195                           
   196                           ;psect for function _main
   197  06F7                     _main:
   198                           
   199                           ;newmain.c: 53: CMCONbits.CM = 0b111;
   200                           
   201                           ;incstack = 0
   202                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   203  06F7  3007               	movlw	7
   204  06F8  1283               	bcf	3,5	;RP0=0, select bank0
   205  06F9  1303               	bcf	3,6	;RP1=0, select bank0
   206  06FA  049F               	iorwf	31,f	;volatile
   207                           
   208                           ;newmain.c: 55: TRISBbits.TRISB0 = 0;
   209  06FB  1683               	bsf	3,5	;RP0=1, select bank1
   210  06FC  1303               	bcf	3,6	;RP1=0, select bank1
   211  06FD  1006               	bcf	6,0	;volatile
   212  06FE                     l573:
   213                           
   214                           ;newmain.c: 58: {;newmain.c: 61: dash();
   215  06FE  26CF               	fcall	_dash
   216                           
   217                           ;newmain.c: 62: _delay((unsigned long)((1000)*(4000000/4000.0))) ;
   218  06FF  3006               	movlw	6
   219  0700  00F5               	movwf	??_main+2
   220  0701  3013               	movlw	19
   221  0702  00F4               	movwf	??_main+1
   222  0703  30AD               	movlw	173
   223  0704  00F3               	movwf	??_main
   224  0705                     u17:
   225  0705  0BF3               	decfsz	??_main,f
   226  0706  2F05               	goto	u17
   227  0707  0BF4               	decfsz	??_main+1,f
   228  0708  2F05               	goto	u17
   229  0709  0BF5               	decfsz	??_main+2,f
   230  070A  2F05               	goto	u17
   231  070B  2F0C               	nop2
   232                           
   233                           ;newmain.c: 63: dot();
   234  070C  26E3               	fcall	_dot
   235                           
   236                           ;newmain.c: 64: _delay((unsigned long)((1000)*(4000000/4000.0))) ;
   237  070D  3006               	movlw	6
   238  070E  00F5               	movwf	??_main+2
   239  070F  3013               	movlw	19
   240  0710  00F4               	movwf	??_main+1
   241  0711  30AD               	movlw	173
   242  0712  00F3               	movwf	??_main
   243  0713                     u27:
   244  0713  0BF3               	decfsz	??_main,f
   245  0714  2F13               	goto	u27
   246  0715  0BF4               	decfsz	??_main+1,f
   247  0716  2F13               	goto	u27
   248  0717  0BF5               	decfsz	??_main+2,f
   249  0718  2F13               	goto	u27
   250  0719  2F1A               	nop2
   251                           
   252                           ;newmain.c: 65: dash();
   253  071A  26CF               	fcall	_dash
   254                           
   255                           ;newmain.c: 66: _delay((unsigned long)((1000)*(4000000/4000.0))) ;
   256  071B  3006               	movlw	6
   257  071C  00F5               	movwf	??_main+2
   258  071D  3013               	movlw	19
   259  071E  00F4               	movwf	??_main+1
   260  071F  30AD               	movlw	173
   261  0720  00F3               	movwf	??_main
   262  0721                     u37:
   263  0721  0BF3               	decfsz	??_main,f
   264  0722  2F21               	goto	u37
   265  0723  0BF4               	decfsz	??_main+1,f
   266  0724  2F21               	goto	u37
   267  0725  0BF5               	decfsz	??_main+2,f
   268  0726  2F21               	goto	u37
   269  0727  2F28               	nop2
   270                           
   271                           ;newmain.c: 67: dash();
   272  0728  26CF               	fcall	_dash
   273                           
   274                           ;newmain.c: 68: _delay((unsigned long)((1000)*(4000000/4000.0))) ;
   275  0729  3006               	movlw	6
   276  072A  00F5               	movwf	??_main+2
   277  072B  3013               	movlw	19
   278  072C  00F4               	movwf	??_main+1
   279  072D  30AD               	movlw	173
   280  072E  00F3               	movwf	??_main
   281  072F                     u47:
   282  072F  0BF3               	decfsz	??_main,f
   283  0730  2F2F               	goto	u47
   284  0731  0BF4               	decfsz	??_main+1,f
   285  0732  2F2F               	goto	u47
   286  0733  0BF5               	decfsz	??_main+2,f
   287  0734  2F2F               	goto	u47
   288  0735  2F36               	nop2
   289                           
   290                           ;newmain.c: 69: dash();
   291  0736  26CF               	fcall	_dash
   292                           
   293                           ;newmain.c: 70: _delay((unsigned long)((1000)*(4000000/4000.0))) ;
   294  0737  3006               	movlw	6
   295  0738  00F5               	movwf	??_main+2
   296  0739  3013               	movlw	19
   297  073A  00F4               	movwf	??_main+1
   298  073B  30AD               	movlw	173
   299  073C  00F3               	movwf	??_main
   300  073D                     u57:
   301  073D  0BF3               	decfsz	??_main,f
   302  073E  2F3D               	goto	u57
   303  073F  0BF4               	decfsz	??_main+1,f
   304  0740  2F3D               	goto	u57
   305  0741  0BF5               	decfsz	??_main+2,f
   306  0742  2F3D               	goto	u57
   307  0743  2F44               	nop2
   308                           
   309                           ;newmain.c: 71: dot();
   310  0744  26E3               	fcall	_dot
   311                           
   312                           ;newmain.c: 72: _delay((unsigned long)((1000)*(4000000/4000.0))) ;
   313  0745  3006               	movlw	6
   314  0746  00F5               	movwf	??_main+2
   315  0747  3013               	movlw	19
   316  0748  00F4               	movwf	??_main+1
   317  0749  30AD               	movlw	173
   318  074A  00F3               	movwf	??_main
   319  074B                     u67:
   320  074B  0BF3               	decfsz	??_main,f
   321  074C  2F4B               	goto	u67
   322  074D  0BF4               	decfsz	??_main+1,f
   323  074E  2F4B               	goto	u67
   324  074F  0BF5               	decfsz	??_main+2,f
   325  0750  2F4B               	goto	u67
   326  0751  2F52               	nop2
   327                           
   328                           ;newmain.c: 73: dash();
   329  0752  26CF               	fcall	_dash
   330                           
   331                           ;newmain.c: 74: _delay((unsigned long)((1000)*(4000000/4000.0))) ;
   332  0753  3006               	movlw	6
   333  0754  00F5               	movwf	??_main+2
   334  0755  3013               	movlw	19
   335  0756  00F4               	movwf	??_main+1
   336  0757  30AD               	movlw	173
   337  0758  00F3               	movwf	??_main
   338  0759                     u77:
   339  0759  0BF3               	decfsz	??_main,f
   340  075A  2F59               	goto	u77
   341  075B  0BF4               	decfsz	??_main+1,f
   342  075C  2F59               	goto	u77
   343  075D  0BF5               	decfsz	??_main+2,f
   344  075E  2F59               	goto	u77
   345  075F  2F60               	nop2
   346                           
   347                           ;newmain.c: 75: dash();
   348  0760  26CF               	fcall	_dash
   349                           
   350                           ;newmain.c: 76: _delay((unsigned long)((1000)*(4000000/4000.0))) ;
   351  0761  3006               	movlw	6
   352  0762  00F5               	movwf	??_main+2
   353  0763  3013               	movlw	19
   354  0764  00F4               	movwf	??_main+1
   355  0765  30AD               	movlw	173
   356  0766  00F3               	movwf	??_main
   357  0767                     u87:
   358  0767  0BF3               	decfsz	??_main,f
   359  0768  2F67               	goto	u87
   360  0769  0BF4               	decfsz	??_main+1,f
   361  076A  2F67               	goto	u87
   362  076B  0BF5               	decfsz	??_main+2,f
   363  076C  2F67               	goto	u87
   364  076D  2F6E               	nop2
   365                           
   366                           ;newmain.c: 77: dot();
   367  076E  26E3               	fcall	_dot
   368                           
   369                           ;newmain.c: 78: _delay((unsigned long)((1000)*(4000000/4000.0))) ;
   370  076F  3006               	movlw	6
   371  0770  00F5               	movwf	??_main+2
   372  0771  3013               	movlw	19
   373  0772  00F4               	movwf	??_main+1
   374  0773  30AD               	movlw	173
   375  0774  00F3               	movwf	??_main
   376  0775                     u97:
   377  0775  0BF3               	decfsz	??_main,f
   378  0776  2F75               	goto	u97
   379  0777  0BF4               	decfsz	??_main+1,f
   380  0778  2F75               	goto	u97
   381  0779  0BF5               	decfsz	??_main+2,f
   382  077A  2F75               	goto	u97
   383  077B  2F7C               	nop2
   384                           
   385                           ;newmain.c: 79: dot();
   386  077C  26E3               	fcall	_dot
   387                           
   388                           ;newmain.c: 80: _delay((unsigned long)((1000)*(4000000/4000.0))) ;
   389  077D  3006               	movlw	6
   390  077E  00F5               	movwf	??_main+2
   391  077F  3013               	movlw	19
   392  0780  00F4               	movwf	??_main+1
   393  0781  30AD               	movlw	173
   394  0782  00F3               	movwf	??_main
   395  0783                     u107:
   396  0783  0BF3               	decfsz	??_main,f
   397  0784  2F83               	goto	u107
   398  0785  0BF4               	decfsz	??_main+1,f
   399  0786  2F83               	goto	u107
   400  0787  0BF5               	decfsz	??_main+2,f
   401  0788  2F83               	goto	u107
   402  0789  2F8A               	nop2
   403                           
   404                           ;newmain.c: 81: dot();
   405  078A  26E3               	fcall	_dot
   406                           
   407                           ;newmain.c: 82: _delay((unsigned long)((1000)*(4000000/4000.0))) ;
   408  078B  3006               	movlw	6
   409  078C  00F5               	movwf	??_main+2
   410  078D  3013               	movlw	19
   411  078E  00F4               	movwf	??_main+1
   412  078F  30AD               	movlw	173
   413  0790  00F3               	movwf	??_main
   414  0791                     u117:
   415  0791  0BF3               	decfsz	??_main,f
   416  0792  2F91               	goto	u117
   417  0793  0BF4               	decfsz	??_main+1,f
   418  0794  2F91               	goto	u117
   419  0795  0BF5               	decfsz	??_main+2,f
   420  0796  2F91               	goto	u117
   421  0797  2F98               	nop2
   422                           
   423                           ;newmain.c: 83: dot();
   424  0798  26E3               	fcall	_dot
   425                           
   426                           ;newmain.c: 84: _delay((unsigned long)((1000)*(4000000/4000.0))) ;
   427  0799  3006               	movlw	6
   428  079A  00F5               	movwf	??_main+2
   429  079B  3013               	movlw	19
   430  079C  00F4               	movwf	??_main+1
   431  079D  30AD               	movlw	173
   432  079E  00F3               	movwf	??_main
   433  079F                     u127:
   434  079F  0BF3               	decfsz	??_main,f
   435  07A0  2F9F               	goto	u127
   436  07A1  0BF4               	decfsz	??_main+1,f
   437  07A2  2F9F               	goto	u127
   438  07A3  0BF5               	decfsz	??_main+2,f
   439  07A4  2F9F               	goto	u127
   440  07A5  2FA6               	nop2
   441                           
   442                           ;newmain.c: 85: dash();
   443  07A6  26CF               	fcall	_dash
   444                           
   445                           ;newmain.c: 86: _delay((unsigned long)((1000)*(4000000/4000.0))) ;
   446  07A7  3006               	movlw	6
   447  07A8  00F5               	movwf	??_main+2
   448  07A9  3013               	movlw	19
   449  07AA  00F4               	movwf	??_main+1
   450  07AB  30AD               	movlw	173
   451  07AC  00F3               	movwf	??_main
   452  07AD                     u137:
   453  07AD  0BF3               	decfsz	??_main,f
   454  07AE  2FAD               	goto	u137
   455  07AF  0BF4               	decfsz	??_main+1,f
   456  07B0  2FAD               	goto	u137
   457  07B1  0BF5               	decfsz	??_main+2,f
   458  07B2  2FAD               	goto	u137
   459  07B3  2FB4               	nop2
   460                           
   461                           ;newmain.c: 87: dot();
   462  07B4  26E3               	fcall	_dot
   463                           
   464                           ;newmain.c: 88: _delay((unsigned long)((1000)*(4000000/4000.0))) ;
   465  07B5  3006               	movlw	6
   466  07B6  00F5               	movwf	??_main+2
   467  07B7  3013               	movlw	19
   468  07B8  00F4               	movwf	??_main+1
   469  07B9  30AD               	movlw	173
   470  07BA  00F3               	movwf	??_main
   471  07BB                     u147:
   472  07BB  0BF3               	decfsz	??_main,f
   473  07BC  2FBB               	goto	u147
   474  07BD  0BF4               	decfsz	??_main+1,f
   475  07BE  2FBB               	goto	u147
   476  07BF  0BF5               	decfsz	??_main+2,f
   477  07C0  2FBB               	goto	u147
   478  07C1  2FC2               	nop2
   479                           
   480                           ;newmain.c: 89: dash();
   481  07C2  26CF               	fcall	_dash
   482                           
   483                           ;newmain.c: 90: _delay((unsigned long)((1000)*(4000000/4000.0))) ;
   484  07C3  3006               	movlw	6
   485  07C4  00F5               	movwf	??_main+2
   486  07C5  3013               	movlw	19
   487  07C6  00F4               	movwf	??_main+1
   488  07C7  30AD               	movlw	173
   489  07C8  00F3               	movwf	??_main
   490  07C9                     u157:
   491  07C9  0BF3               	decfsz	??_main,f
   492  07CA  2FC9               	goto	u157
   493  07CB  0BF4               	decfsz	??_main+1,f
   494  07CC  2FC9               	goto	u157
   495  07CD  0BF5               	decfsz	??_main+2,f
   496  07CE  2FC9               	goto	u157
   497  07CF  2FD0               	nop2
   498                           
   499                           ;newmain.c: 91: dot();
   500  07D0  26E3               	fcall	_dot
   501                           
   502                           ;newmain.c: 92: _delay((unsigned long)((1000)*(4000000/4000.0))) ;
   503  07D1  3006               	movlw	6
   504  07D2  00F5               	movwf	??_main+2
   505  07D3  3013               	movlw	19
   506  07D4  00F4               	movwf	??_main+1
   507  07D5  30AD               	movlw	173
   508  07D6  00F3               	movwf	??_main
   509  07D7                     u167:
   510  07D7  0BF3               	decfsz	??_main,f
   511  07D8  2FD7               	goto	u167
   512  07D9  0BF4               	decfsz	??_main+1,f
   513  07DA  2FD7               	goto	u167
   514  07DB  0BF5               	decfsz	??_main+2,f
   515  07DC  2FD7               	goto	u167
   516  07DD  2FDE               	nop2
   517                           
   518                           ;newmain.c: 93: dash();
   519  07DE  26CF               	fcall	_dash
   520                           
   521                           ;newmain.c: 94: _delay((unsigned long)((1000)*(4000000/4000.0))) ;
   522  07DF  3006               	movlw	6
   523  07E0  00F5               	movwf	??_main+2
   524  07E1  3013               	movlw	19
   525  07E2  00F4               	movwf	??_main+1
   526  07E3  30AD               	movlw	173
   527  07E4  00F3               	movwf	??_main
   528  07E5                     u177:
   529  07E5  0BF3               	decfsz	??_main,f
   530  07E6  2FE5               	goto	u177
   531  07E7  0BF4               	decfsz	??_main+1,f
   532  07E8  2FE5               	goto	u177
   533  07E9  0BF5               	decfsz	??_main+2,f
   534  07EA  2FE5               	goto	u177
   535  07EB  2FEC               	nop2
   536                           
   537                           ;newmain.c: 95: dash();
   538  07EC  26CF               	fcall	_dash
   539                           
   540                           ;newmain.c: 97: PORTBbits.RB0=0;
   541  07ED  1283               	bcf	3,5	;RP0=0, select bank0
   542  07EE  1303               	bcf	3,6	;RP1=0, select bank0
   543  07EF  1006               	bcf	6,0	;volatile
   544                           
   545                           ;newmain.c: 98: _delay((unsigned long)((10000)*(4000000/4000.0))) ;
   546  07F0  3033               	movlw	51
   547  07F1  00F5               	movwf	??_main+2
   548  07F2  30BB               	movlw	187
   549  07F3  00F4               	movwf	??_main+1
   550  07F4  30DF               	movlw	223
   551  07F5  00F3               	movwf	??_main
   552  07F6                     u187:
   553  07F6  0BF3               	decfsz	??_main,f
   554  07F7  2FF6               	goto	u187
   555  07F8  0BF4               	decfsz	??_main+1,f
   556  07F9  2FF6               	goto	u187
   557  07FA  0BF5               	decfsz	??_main+2,f
   558  07FB  2FF6               	goto	u187
   559  07FC  2FFD               	nop2
   560  07FD  2EFE               	goto	l573
   561  07FE                     __end_of_main:
   562                           
   563                           	psect	text1
   564  06E3                     __ptext1:	
   565 ;; *************** function _dot *****************
   566 ;; Defined at:
   567 ;;		line 26 in file "newmain.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;		None
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   581 ;;      Params:         0       0       0       0
   582 ;;      Locals:         0       0       0       0
   583 ;;      Temps:          3       0       0       0
   584 ;;      Totals:         3       0       0       0
   585 ;;Total ram usage:        3 bytes
   586 ;; Hardware stack levels used: 1
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           
   595                           ;psect for function _dot
   596  06E3                     _dot:
   597                           
   598                           ;newmain.c: 30: PORTBbits.RB0=1;
   599                           
   600                           ;incstack = 0
   601                           ; Regs used in _dot: [wreg]
   602  06E3  1283               	bcf	3,5	;RP0=0, select bank0
   603  06E4  1303               	bcf	3,6	;RP1=0, select bank0
   604  06E5  1406               	bsf	6,0	;volatile
   605                           
   606                           ;newmain.c: 31: _delay((unsigned long)((500)*(4000000/4000.0)));
   607  06E6  3003               	movlw	3
   608  06E7  00F2               	movwf	??_dot+2
   609  06E8  308A               	movlw	138
   610  06E9  00F1               	movwf	??_dot+1
   611  06EA  3055               	movlw	85
   612  06EB  00F0               	movwf	??_dot
   613  06EC                     u197:
   614  06EC  0BF0               	decfsz	??_dot,f
   615  06ED  2EEC               	goto	u197
   616  06EE  0BF1               	decfsz	??_dot+1,f
   617  06EF  2EEC               	goto	u197
   618  06F0  0BF2               	decfsz	??_dot+2,f
   619  06F1  2EEC               	goto	u197
   620  06F2  2EF3               	nop2
   621                           
   622                           ;newmain.c: 32: PORTBbits.RB0=0;
   623  06F3  1283               	bcf	3,5	;RP0=0, select bank0
   624  06F4  1303               	bcf	3,6	;RP1=0, select bank0
   625  06F5  1006               	bcf	6,0	;volatile
   626  06F6  0008               	return
   627  06F7                     __end_of_dot:
   628                           
   629                           	psect	text2
   630  06CF                     __ptext2:	
   631 ;; *************** function _dash *****************
   632 ;; Defined at:
   633 ;;		line 38 in file "newmain.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   647 ;;      Params:         0       0       0       0
   648 ;;      Locals:         0       0       0       0
   649 ;;      Temps:          3       0       0       0
   650 ;;      Totals:         3       0       0       0
   651 ;;Total ram usage:        3 bytes
   652 ;; Hardware stack levels used: 1
   653 ;; This function calls:
   654 ;;		Nothing
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           
   661                           ;psect for function _dash
   662  06CF                     _dash:
   663                           
   664                           ;newmain.c: 42: PORTBbits.RB0=1;
   665                           
   666                           ;incstack = 0
   667                           ; Regs used in _dash: [wreg]
   668  06CF  1283               	bcf	3,5	;RP0=0, select bank0
   669  06D0  1303               	bcf	3,6	;RP1=0, select bank0
   670  06D1  1406               	bsf	6,0	;volatile
   671                           
   672                           ;newmain.c: 43: _delay((unsigned long)((1500)*(4000000/4000.0)));
   673  06D2  3008               	movlw	8
   674  06D3  00F2               	movwf	??_dash+2
   675  06D4  309D               	movlw	157
   676  06D5  00F1               	movwf	??_dash+1
   677  06D6  3005               	movlw	5
   678  06D7  00F0               	movwf	??_dash
   679  06D8                     u207:
   680  06D8  0BF0               	decfsz	??_dash,f
   681  06D9  2ED8               	goto	u207
   682  06DA  0BF1               	decfsz	??_dash+1,f
   683  06DB  2ED8               	goto	u207
   684  06DC  0BF2               	decfsz	??_dash+2,f
   685  06DD  2ED8               	goto	u207
   686  06DE  2EDF               	nop2
   687                           
   688                           ;newmain.c: 44: PORTBbits.RB0=0;
   689  06DF  1283               	bcf	3,5	;RP0=0, select bank0
   690  06E0  1303               	bcf	3,6	;RP1=0, select bank0
   691  06E1  1006               	bcf	6,0	;volatile
   692  06E2  0008               	return
   693  06E3                     __end_of_dash:
   694  007E                     btemp	set	126	;btemp
   695  007E                     wtemp0	set	126
   696                           
   697                           	psect	config
   698                           
   699                           ;Config register CONFIG @ 0x2007
   700                           ;	Oscillator Selection bits
   701                           ;	FOSC = INTOSCCLK, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O funct
      +                          ion on RA7/OSC1/CLKIN
   702                           ;	Watchdog Timer Enable bit
   703                           ;	WDTE = OFF, WDT disabled
   704                           ;	Power-up Timer Enable bit
   705                           ;	PWRTE = OFF, PWRT disabled
   706                           ;	RA5/MCLR/VPP Pin Function Select bit
   707                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
   708                           ;	Brown-out Detect Enable bit
   709                           ;	BOREN = OFF, BOD disabled
   710                           ;	Low-Voltage Programming Enable bit
   711                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   712                           ;	Data EE Memory Code Protection bit
   713                           ;	CPD = OFF, Data memory code protection off
   714                           ;	Flash Program Memory Code Protection bit
   715                           ;	CP = OFF, Code protection off
   716  2007                     	org	8199
   717  2007  3F19               	dw	16153

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_dash
    _main->_dot

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 COMMON     3     3      0
                               _dash
                                _dot
 ---------------------------------------------------------------------------------
 (1) _dot                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _dash                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dash
   _dot

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jan 15 23:03:15 2022

                     u17 0705                       u27 0713                       u37 0721  
                     u47 072F                       u57 073D                       u67 074B  
                     u77 0759                       u87 0767                       u97 0775  
                    l573 06FE                      u107 0783                      u117 0791  
                    u207 06D8                      u127 079F                      u137 07AD  
                    u147 07BB                      u157 07C9                      u167 07D7  
                    u177 07E5                      u187 07F6                      u197 06EC  
                    _dot 06E3                     ?_dot 0070                     _dash 06CF  
                   _main 06F7                     btemp 007E                     start 0000  
                  ??_dot 0070                    ?_dash 0070                    ?_main 0070  
                  status 0003                    wtemp0 007E          __initialization 07FE  
           __end_of_dash 06E3             __end_of_main 07FE                   ??_dash 0070  
                 ??_main 0073  __end_of__initialization 07FE           __pcstackCOMMON 0070  
             __pmaintext 06F7                _CMCONbits 001F                  __ptext1 06E3  
                __ptext2 06CF             __size_of_dot 0014     end_of_initialization 07FE  
              _PORTBbits 0006                _TRISBbits 0086      start_initialization 07FE  
            __end_of_dot 06F7                ___latbits 0000            __size_of_dash 0014  
          __size_of_main 0107  
