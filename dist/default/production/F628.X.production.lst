

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sat Jan 15 20:14:49 2022

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.44
    15                           ; Generated 14/09/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F628A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0015                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001F                     	;# 
    72  0081                     	;# 
    73  0085                     	;# 
    74  0086                     	;# 
    75  008C                     	;# 
    76  008E                     	;# 
    77  0092                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009A                     	;# 
    81  009B                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009F                     	;# 
    85  0005                     _PORTAbits	set	5
    86  0005                     _PORTA	set	5
    87  0006                     _PORTB	set	6
    88  0085                     _TRISA	set	133
    89  0086                     _TRISB	set	134
    90                           
    91                           ; #config settings
    92  0000                     
    93                           	psect	cinit
    94  07FE                     start_initialization:	
    95  07FE                     __initialization:	
    96  07FE                     end_of_initialization:	
    97                           ;End of C runtime variable initialization code
    98                           
    99  07FE                     __end_of__initialization:	
   100  07FE  0183               	clrf	3
   101  07FF  2DF1               	ljmp	_main	;jump to C main() function
   102                           
   103                           	psect	cstackCOMMON
   104  0070                     __pcstackCOMMON:	
   105  0070                     ?_main:	
   106  0070                     ?___ftpack:	
   107                           ; 1 bytes @ 0x0
   108                           
   109  0070                     ___ftpack@arg:	
   110                           ; 3 bytes @ 0x0
   111                           
   112                           
   113                           ; 3 bytes @ 0x0
   114  0070                     	ds	3
   115  0073                     ___ftpack@exp:	
   116                           
   117                           ; 1 bytes @ 0x3
   118  0073                     	ds	1
   119  0074                     ___ftpack@sign:	
   120                           
   121                           ; 1 bytes @ 0x4
   122  0074                     	ds	1
   123  0075                     ??___ftpack:	
   124                           
   125                           ; 1 bytes @ 0x5
   126  0075                     	ds	3
   127  0078                     ?___awtoft:	
   128  0078                     ___awtoft@c:	
   129                           ; 3 bytes @ 0x8
   130                           
   131                           
   132                           ; 2 bytes @ 0x8
   133  0078                     	ds	3
   134  007B                     ??___awtoft:	
   135                           
   136                           ; 1 bytes @ 0xB
   137  007B                     	ds	2
   138  007D                     ___awtoft@sign:	
   139                           
   140                           ; 1 bytes @ 0xD
   141  007D                     	ds	1
   142                           
   143                           	psect	cstackBANK0
   144  0020                     __pcstackBANK0:	
   145  0020                     ?___ftmul:	
   146  0020                     ___ftmul@f1:	
   147                           ; 3 bytes @ 0x0
   148                           
   149                           
   150                           ; 3 bytes @ 0x0
   151  0020                     	ds	3
   152  0023                     ___ftmul@f2:	
   153                           
   154                           ; 3 bytes @ 0x3
   155  0023                     	ds	3
   156  0026                     ??___ftmul:	
   157                           
   158                           ; 1 bytes @ 0x6
   159  0026                     	ds	4
   160  002A                     ___ftmul@exp:	
   161                           
   162                           ; 1 bytes @ 0xA
   163  002A                     	ds	1
   164  002B                     ___ftmul@f3_as_product:	
   165                           
   166                           ; 3 bytes @ 0xB
   167  002B                     	ds	3
   168  002E                     ___ftmul@cntr:	
   169                           
   170                           ; 1 bytes @ 0xE
   171  002E                     	ds	1
   172  002F                     ___ftmul@sign:	
   173                           
   174                           ; 1 bytes @ 0xF
   175  002F                     	ds	1
   176  0030                     ?___fttol:	
   177  0030                     ___fttol@f1:	
   178                           ; 4 bytes @ 0x10
   179                           
   180                           
   181                           ; 3 bytes @ 0x10
   182  0030                     	ds	4
   183  0034                     ??___fttol:	
   184                           
   185                           ; 1 bytes @ 0x14
   186  0034                     	ds	4
   187  0038                     ___fttol@sign1:	
   188                           
   189                           ; 1 bytes @ 0x18
   190  0038                     	ds	1
   191  0039                     ___fttol@lval:	
   192                           
   193                           ; 4 bytes @ 0x19
   194  0039                     	ds	4
   195  003D                     ___fttol@exp1:	
   196                           
   197                           ; 1 bytes @ 0x1D
   198  003D                     	ds	1
   199  003E                     ??_main:	
   200                           
   201                           ; 1 bytes @ 0x1E
   202  003E                     	ds	4
   203  0042                     main@i:	
   204                           
   205                           ; 2 bytes @ 0x22
   206  0042                     	ds	2
   207                           
   208                           	psect	maintext
   209  05F1                     __pmaintext:	
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 28 in file "newmain.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;  i               2   34[BANK0 ] int 
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, status,2, status,0, pclath, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : B00/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   229 ;;      Params:         0       0       0       0
   230 ;;      Locals:         0       2       0       0
   231 ;;      Temps:          0       4       0       0
   232 ;;      Totals:         0       6       0       0
   233 ;;Total ram usage:        6 bytes
   234 ;; Hardware stack levels required when called:    2
   235 ;; This function calls:
   236 ;;		___awtoft
   237 ;;		___ftmul
   238 ;;		___fttol
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           
   245                           ;psect for function _main
   246  05F1                     _main:	
   247                           
   248                           ;newmain.c: 30: TRISB = 0x00;
   249                           
   250                           ;incstack = 0
   251                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   252  05F1  1683               	bsf	3,5	;RP0=1, select bank1
   253  05F2  1303               	bcf	3,6	;RP1=0, select bank1
   254  05F3  0186               	clrf	6	;volatile
   255                           
   256                           ;newmain.c: 31: PORTB = 0x00;
   257  05F4  1283               	bcf	3,5	;RP0=0, select bank0
   258  05F5  1303               	bcf	3,6	;RP1=0, select bank0
   259  05F6  0186               	clrf	6	;volatile
   260                           
   261                           ;newmain.c: 32: TRISA &= ~0x03;
   262  05F7  30FC               	movlw	252
   263  05F8  00BE               	movwf	??_main
   264  05F9  083E               	movf	??_main,w
   265  05FA  1683               	bsf	3,5	;RP0=1, select bank1
   266  05FB  1303               	bcf	3,6	;RP1=0, select bank1
   267  05FC  0585               	andwf	5,f	;volatile
   268                           
   269                           ;newmain.c: 33: PORTA &= ~0x03;
   270  05FD  30FC               	movlw	252
   271  05FE  1283               	bcf	3,5	;RP0=0, select bank0
   272  05FF  1303               	bcf	3,6	;RP1=0, select bank0
   273  0600  00BE               	movwf	??_main
   274  0601  083E               	movf	??_main,w
   275  0602  0585               	andwf	5,f	;volatile
   276                           
   277                           ;newmain.c: 34: int i=100;
   278  0603  3064               	movlw	100
   279  0604  00C2               	movwf	main@i
   280  0605  3000               	movlw	0
   281  0606  00C3               	movwf	main@i+1
   282  0607                     l774:	
   283                           ;newmain.c: 35: while(1)
   284                           
   285                           
   286                           ;newmain.c: 36: {
   287                           ;newmain.c: 38: PORTAbits.RA1=1;
   288  0607  1485               	bsf	5,1	;volatile
   289                           
   290                           ;newmain.c: 39: _delay((unsigned long)((i)*(4000000/4000.0)));
   291  0608  0843               	movf	main@i+1,w
   292  0609  00F9               	movwf	___awtoft@c+1
   293  060A  0842               	movf	main@i,w
   294  060B  00F8               	movwf	___awtoft@c
   295  060C  25D2               	fcall	___awtoft
   296  060D  0878               	movf	?___awtoft,w
   297  060E  1283               	bcf	3,5	;RP0=0, select bank0
   298  060F  1303               	bcf	3,6	;RP1=0, select bank0
   299  0610  00A3               	movwf	___ftmul@f2
   300  0611  0879               	movf	?___awtoft+1,w
   301  0612  00A4               	movwf	___ftmul@f2+1
   302  0613  087A               	movf	?___awtoft+2,w
   303  0614  00A5               	movwf	___ftmul@f2+2
   304  0615  3000               	movlw	0
   305  0616  00A0               	movwf	___ftmul@f1
   306  0617  307A               	movlw	122
   307  0618  00A1               	movwf	___ftmul@f1+1
   308  0619  3044               	movlw	68
   309  061A  00A2               	movwf	___ftmul@f1+2
   310  061B  272D               	fcall	___ftmul
   311  061C  1283               	bcf	3,5	;RP0=0, select bank0
   312  061D  1303               	bcf	3,6	;RP1=0, select bank0
   313  061E  0820               	movf	?___ftmul,w
   314  061F  00B0               	movwf	___fttol@f1
   315  0620  0821               	movf	?___ftmul+1,w
   316  0621  00B1               	movwf	___fttol@f1+1
   317  0622  0822               	movf	?___ftmul+2,w
   318  0623  00B2               	movwf	___fttol@f1+2
   319  0624  269F               	fcall	___fttol
   320  0625  1283               	bcf	3,5	;RP0=0, select bank0
   321  0626  1303               	bcf	3,6	;RP1=0, select bank0
   322  0627  0830               	movf	?___fttol,w
   323  0628  00BE               	movwf	??_main
   324  0629  0831               	movf	?___fttol+1,w
   325  062A  00BF               	movwf	??_main+1
   326  062B  0832               	movf	?___fttol+2,w
   327  062C  00C0               	movwf	??_main+2
   328  062D  0833               	movf	?___fttol+3,w
   329  062E  00C1               	movwf	??_main+3
   330                           
   331                           ;newmain.c: 40: PORTAbits.RA1=0;
   332  062F  1283               	bcf	3,5	;RP0=0, select bank0
   333  0630  1303               	bcf	3,6	;RP1=0, select bank0
   334  0631  1085               	bcf	5,1	;volatile
   335  0632  2E07               	goto	l774
   336  0633                     __end_of_main:	
   337                           ;newmain.c: 44: }
   338                           ;newmain.c: 47: return;
   339                           
   340                           
   341                           	psect	text1
   342  069F                     __ptext1:	
   343 ;; *************** function ___fttol *****************
   344 ;; Defined at:
   345 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;  f1              3   16[BANK0 ] float 
   348 ;; Auto vars:     Size  Location     Type
   349 ;;  lval            4   25[BANK0 ] unsigned long 
   350 ;;  exp1            1   29[BANK0 ] unsigned char 
   351 ;;  sign1           1   24[BANK0 ] unsigned char 
   352 ;; Return value:  Size  Location     Type
   353 ;;                  4   16[BANK0 ] long 
   354 ;; Registers used:
   355 ;;		wreg, status,2, status,0
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   361 ;;      Params:         0       4       0       0
   362 ;;      Locals:         0       6       0       0
   363 ;;      Temps:          0       4       0       0
   364 ;;      Totals:         0      14       0       0
   365 ;;Total ram usage:       14 bytes
   366 ;; Hardware stack levels used:    1
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		_main
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           
   375                           ;psect for function ___fttol
   376  069F                     ___fttol:	
   377                           
   378                           ;incstack = 0
   379                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   380  069F  1283               	bcf	3,5	;RP0=0, select bank0
   381  06A0  1303               	bcf	3,6	;RP1=0, select bank0
   382  06A1  0830               	movf	___fttol@f1,w
   383  06A2  00B4               	movwf	??___fttol
   384  06A3  0831               	movf	___fttol@f1+1,w
   385  06A4  00B5               	movwf	??___fttol+1
   386  06A5  0832               	movf	___fttol@f1+2,w
   387  06A6  00B6               	movwf	??___fttol+2
   388  06A7  1003               	clrc
   389  06A8  0D35               	rlf	??___fttol+1,w
   390  06A9  0D36               	rlf	??___fttol+2,w
   391  06AA  00B7               	movwf	??___fttol+3
   392  06AB  0837               	movf	??___fttol+3,w
   393  06AC  00BD               	movwf	___fttol@exp1
   394  06AD  083D               	movf	___fttol@exp1,w
   395  06AE  1D03               	btfss	3,2
   396  06AF  2EB9               	goto	l730
   397  06B0  3000               	movlw	0
   398  06B1  00B3               	movwf	?___fttol+3
   399  06B2  3000               	movlw	0
   400  06B3  00B2               	movwf	?___fttol+2
   401  06B4  3000               	movlw	0
   402  06B5  00B1               	movwf	?___fttol+1
   403  06B6  3000               	movlw	0
   404  06B7  00B0               	movwf	?___fttol
   405  06B8  0008               	return
   406  06B9                     l730:	
   407  06B9  0830               	movf	___fttol@f1,w
   408  06BA  00B4               	movwf	??___fttol
   409  06BB  0831               	movf	___fttol@f1+1,w
   410  06BC  00B5               	movwf	??___fttol+1
   411  06BD  0832               	movf	___fttol@f1+2,w
   412  06BE  00B6               	movwf	??___fttol+2
   413  06BF  3017               	movlw	23
   414  06C0                     u665:	
   415  06C0  1003               	clrc
   416  06C1  0CB6               	rrf	??___fttol+2,f
   417  06C2  0CB5               	rrf	??___fttol+1,f
   418  06C3  0CB4               	rrf	??___fttol,f
   419  06C4  3EFF               	addlw	-1
   420  06C5  1D03               	skipz
   421  06C6  2EC0               	goto	u665
   422  06C7  0834               	movf	??___fttol,w
   423  06C8  00B7               	movwf	??___fttol+3
   424  06C9  0837               	movf	??___fttol+3,w
   425  06CA  00B8               	movwf	___fttol@sign1
   426  06CB  17B1               	bsf	___fttol@f1+1,7
   427  06CC  30FF               	movlw	255
   428  06CD  05B0               	andwf	___fttol@f1,f
   429  06CE  30FF               	movlw	255
   430  06CF  05B1               	andwf	___fttol@f1+1,f
   431  06D0  3000               	movlw	0
   432  06D1  05B2               	andwf	___fttol@f1+2,f
   433  06D2  0830               	movf	___fttol@f1,w
   434  06D3  00B9               	movwf	___fttol@lval
   435  06D4  0831               	movf	___fttol@f1+1,w
   436  06D5  00BA               	movwf	___fttol@lval+1
   437  06D6  0832               	movf	___fttol@f1+2,w
   438  06D7  00BB               	movwf	___fttol@lval+2
   439  06D8  01BC               	clrf	___fttol@lval+3
   440  06D9  308E               	movlw	142
   441  06DA  02BD               	subwf	___fttol@exp1,f
   442  06DB  1FBD               	btfss	___fttol@exp1,7
   443  06DC  2EFB               	goto	l750
   444  06DD  083D               	movf	___fttol@exp1,w
   445  06DE  3A80               	xorlw	128
   446  06DF  3E8F               	addlw	143
   447  06E0  1803               	skipnc
   448  06E1  2EEB               	goto	l748
   449  06E2  3000               	movlw	0
   450  06E3  00B3               	movwf	?___fttol+3
   451  06E4  3000               	movlw	0
   452  06E5  00B2               	movwf	?___fttol+2
   453  06E6  3000               	movlw	0
   454  06E7  00B1               	movwf	?___fttol+1
   455  06E8  3000               	movlw	0
   456  06E9  00B0               	movwf	?___fttol
   457  06EA  0008               	return
   458  06EB                     l748:	
   459  06EB  3001               	movlw	1
   460  06EC                     u695:	
   461  06EC  1003               	clrc
   462  06ED  0CBC               	rrf	___fttol@lval+3,f
   463  06EE  0CBB               	rrf	___fttol@lval+2,f
   464  06EF  0CBA               	rrf	___fttol@lval+1,f
   465  06F0  0CB9               	rrf	___fttol@lval,f
   466  06F1  3EFF               	addlw	-1
   467  06F2  1D03               	skipz
   468  06F3  2EEC               	goto	u695
   469  06F4  3001               	movlw	1
   470  06F5  00B4               	movwf	??___fttol
   471  06F6  0834               	movf	??___fttol,w
   472  06F7  07BD               	addwf	___fttol@exp1,f
   473  06F8  1903               	btfsc	3,2
   474  06F9  2F16               	goto	l758
   475  06FA  2EEB               	goto	l748
   476  06FB                     l750:	
   477  06FB  3018               	movlw	24
   478  06FC  023D               	subwf	___fttol@exp1,w
   479  06FD  1C03               	skipc
   480  06FE  2F13               	goto	l356
   481  06FF  3000               	movlw	0
   482  0700  00B3               	movwf	?___fttol+3
   483  0701  3000               	movlw	0
   484  0702  00B2               	movwf	?___fttol+2
   485  0703  3000               	movlw	0
   486  0704  00B1               	movwf	?___fttol+1
   487  0705  3000               	movlw	0
   488  0706  00B0               	movwf	?___fttol
   489  0707  0008               	return
   490  0708                     l756:	
   491  0708  3001               	movlw	1
   492  0709  00B4               	movwf	??___fttol
   493  070A                     u725:	
   494  070A  1003               	clrc
   495  070B  0DB9               	rlf	___fttol@lval,f
   496  070C  0DBA               	rlf	___fttol@lval+1,f
   497  070D  0DBB               	rlf	___fttol@lval+2,f
   498  070E  0DBC               	rlf	___fttol@lval+3,f
   499  070F  0BB4               	decfsz	??___fttol,f
   500  0710  2F0A               	goto	u725
   501  0711  3001               	movlw	1
   502  0712  02BD               	subwf	___fttol@exp1,f
   503  0713                     l356:	
   504  0713  083D               	movf	___fttol@exp1,w
   505  0714  1D03               	btfss	3,2
   506  0715  2F08               	goto	l756
   507  0716                     l758:	
   508  0716  0838               	movf	___fttol@sign1,w
   509  0717  1903               	btfsc	3,2
   510  0718  2F24               	goto	l762
   511  0719  09B9               	comf	___fttol@lval,f
   512  071A  09BA               	comf	___fttol@lval+1,f
   513  071B  09BB               	comf	___fttol@lval+2,f
   514  071C  09BC               	comf	___fttol@lval+3,f
   515  071D  0AB9               	incf	___fttol@lval,f
   516  071E  1903               	skipnz
   517  071F  0ABA               	incf	___fttol@lval+1,f
   518  0720  1903               	skipnz
   519  0721  0ABB               	incf	___fttol@lval+2,f
   520  0722  1903               	skipnz
   521  0723  0ABC               	incf	___fttol@lval+3,f
   522  0724                     l762:	
   523  0724  083C               	movf	___fttol@lval+3,w
   524  0725  00B3               	movwf	?___fttol+3
   525  0726  083B               	movf	___fttol@lval+2,w
   526  0727  00B2               	movwf	?___fttol+2
   527  0728  083A               	movf	___fttol@lval+1,w
   528  0729  00B1               	movwf	?___fttol+1
   529  072A  0839               	movf	___fttol@lval,w
   530  072B  00B0               	movwf	?___fttol
   531  072C  0008               	return
   532  072D                     __end_of___fttol:	
   533                           
   534                           	psect	text2
   535  072D                     __ptext2:	
   536 ;; *************** function ___ftmul *****************
   537 ;; Defined at:
   538 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;  f1              3    0[BANK0 ] float 
   541 ;;  f2              3    3[BANK0 ] float 
   542 ;; Auto vars:     Size  Location     Type
   543 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
   544 ;;  sign            1   15[BANK0 ] unsigned char 
   545 ;;  cntr            1   14[BANK0 ] unsigned char 
   546 ;;  exp             1   10[BANK0 ] unsigned char 
   547 ;; Return value:  Size  Location     Type
   548 ;;                  3    0[BANK0 ] float 
   549 ;; Registers used:
   550 ;;		wreg, status,2, status,0, pclath, cstack
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   556 ;;      Params:         0       6       0       0
   557 ;;      Locals:         0       6       0       0
   558 ;;      Temps:          0       4       0       0
   559 ;;      Totals:         0      16       0       0
   560 ;;Total ram usage:       16 bytes
   561 ;; Hardware stack levels used:    1
   562 ;; Hardware stack levels required when called:    1
   563 ;; This function calls:
   564 ;;		___ftpack
   565 ;; This function is called by:
   566 ;;		_main
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           
   571                           ;psect for function ___ftmul
   572  072D                     ___ftmul:	
   573                           
   574                           ;incstack = 0
   575                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
   576  072D  1283               	bcf	3,5	;RP0=0, select bank0
   577  072E  1303               	bcf	3,6	;RP1=0, select bank0
   578  072F  0820               	movf	___ftmul@f1,w
   579  0730  00A6               	movwf	??___ftmul
   580  0731  0821               	movf	___ftmul@f1+1,w
   581  0732  00A7               	movwf	??___ftmul+1
   582  0733  0822               	movf	___ftmul@f1+2,w
   583  0734  00A8               	movwf	??___ftmul+2
   584  0735  1003               	clrc
   585  0736  0D27               	rlf	??___ftmul+1,w
   586  0737  0D28               	rlf	??___ftmul+2,w
   587  0738  00A9               	movwf	??___ftmul+3
   588  0739  0829               	movf	??___ftmul+3,w
   589  073A  00AA               	movwf	___ftmul@exp
   590  073B  082A               	movf	___ftmul@exp,w
   591  073C  1D03               	btfss	3,2
   592  073D  2F45               	goto	l680
   593  073E  3000               	movlw	0
   594  073F  00A0               	movwf	?___ftmul
   595  0740  3000               	movlw	0
   596  0741  00A1               	movwf	?___ftmul+1
   597  0742  3000               	movlw	0
   598  0743  00A2               	movwf	?___ftmul+2
   599  0744  0008               	return
   600  0745                     l680:	
   601  0745  0823               	movf	___ftmul@f2,w
   602  0746  00A6               	movwf	??___ftmul
   603  0747  0824               	movf	___ftmul@f2+1,w
   604  0748  00A7               	movwf	??___ftmul+1
   605  0749  0825               	movf	___ftmul@f2+2,w
   606  074A  00A8               	movwf	??___ftmul+2
   607  074B  1003               	clrc
   608  074C  0D27               	rlf	??___ftmul+1,w
   609  074D  0D28               	rlf	??___ftmul+2,w
   610  074E  00A9               	movwf	??___ftmul+3
   611  074F  0829               	movf	??___ftmul+3,w
   612  0750  00AF               	movwf	___ftmul@sign
   613  0751  082F               	movf	___ftmul@sign,w
   614  0752  1D03               	btfss	3,2
   615  0753  2F5B               	goto	l686
   616  0754  3000               	movlw	0
   617  0755  00A0               	movwf	?___ftmul
   618  0756  3000               	movlw	0
   619  0757  00A1               	movwf	?___ftmul+1
   620  0758  3000               	movlw	0
   621  0759  00A2               	movwf	?___ftmul+2
   622  075A  0008               	return
   623  075B                     l686:	
   624  075B  082F               	movf	___ftmul@sign,w
   625  075C  3E7B               	addlw	123
   626  075D  00A6               	movwf	??___ftmul
   627  075E  0826               	movf	??___ftmul,w
   628  075F  07AA               	addwf	___ftmul@exp,f
   629  0760  0820               	movf	___ftmul@f1,w
   630  0761  00A6               	movwf	??___ftmul
   631  0762  0821               	movf	___ftmul@f1+1,w
   632  0763  00A7               	movwf	??___ftmul+1
   633  0764  0822               	movf	___ftmul@f1+2,w
   634  0765  00A8               	movwf	??___ftmul+2
   635  0766  3010               	movlw	16
   636  0767                     u535:	
   637  0767  1003               	clrc
   638  0768  0CA8               	rrf	??___ftmul+2,f
   639  0769  0CA7               	rrf	??___ftmul+1,f
   640  076A  0CA6               	rrf	??___ftmul,f
   641  076B  3EFF               	addlw	-1
   642  076C  1D03               	skipz
   643  076D  2F67               	goto	u535
   644  076E  0826               	movf	??___ftmul,w
   645  076F  00A9               	movwf	??___ftmul+3
   646  0770  0829               	movf	??___ftmul+3,w
   647  0771  00AF               	movwf	___ftmul@sign
   648  0772  0823               	movf	___ftmul@f2,w
   649  0773  00A6               	movwf	??___ftmul
   650  0774  0824               	movf	___ftmul@f2+1,w
   651  0775  00A7               	movwf	??___ftmul+1
   652  0776  0825               	movf	___ftmul@f2+2,w
   653  0777  00A8               	movwf	??___ftmul+2
   654  0778  3010               	movlw	16
   655  0779                     u545:	
   656  0779  1003               	clrc
   657  077A  0CA8               	rrf	??___ftmul+2,f
   658  077B  0CA7               	rrf	??___ftmul+1,f
   659  077C  0CA6               	rrf	??___ftmul,f
   660  077D  3EFF               	addlw	-1
   661  077E  1D03               	skipz
   662  077F  2F79               	goto	u545
   663  0780  0826               	movf	??___ftmul,w
   664  0781  00A9               	movwf	??___ftmul+3
   665  0782  0829               	movf	??___ftmul+3,w
   666  0783  06AF               	xorwf	___ftmul@sign,f
   667  0784  3080               	movlw	128
   668  0785  00A6               	movwf	??___ftmul
   669  0786  0826               	movf	??___ftmul,w
   670  0787  05AF               	andwf	___ftmul@sign,f
   671  0788  17A1               	bsf	___ftmul@f1+1,7
   672  0789  17A4               	bsf	___ftmul@f2+1,7
   673  078A  30FF               	movlw	255
   674  078B  05A3               	andwf	___ftmul@f2,f
   675  078C  30FF               	movlw	255
   676  078D  05A4               	andwf	___ftmul@f2+1,f
   677  078E  3000               	movlw	0
   678  078F  05A5               	andwf	___ftmul@f2+2,f
   679  0790  3000               	movlw	0
   680  0791  00AB               	movwf	___ftmul@f3_as_product
   681  0792  3000               	movlw	0
   682  0793  00AC               	movwf	___ftmul@f3_as_product+1
   683  0794  3000               	movlw	0
   684  0795  00AD               	movwf	___ftmul@f3_as_product+2
   685  0796  3007               	movlw	7
   686  0797  00A6               	movwf	??___ftmul
   687  0798  0826               	movf	??___ftmul,w
   688  0799  00AE               	movwf	___ftmul@cntr
   689  079A                     l698:	
   690  079A  1C20               	btfss	___ftmul@f1,0
   691  079B  2FAA               	goto	l702
   692  079C  0823               	movf	___ftmul@f2,w
   693  079D  07AB               	addwf	___ftmul@f3_as_product,f
   694  079E  0824               	movf	___ftmul@f2+1,w
   695  079F  1103               	clrz
   696  07A0  1803               	skipnc
   697  07A1  0A24               	incf	___ftmul@f2+1,w
   698  07A2  1D03               	btfss	3,2
   699  07A3  07AC               	addwf	___ftmul@f3_as_product+1,f
   700  07A4  0825               	movf	___ftmul@f2+2,w
   701  07A5  1103               	clrz
   702  07A6  1803               	skipnc
   703  07A7  0A25               	incf	___ftmul@f2+2,w
   704  07A8  1D03               	btfss	3,2
   705  07A9  07AD               	addwf	___ftmul@f3_as_product+2,f
   706  07AA                     l702:	
   707  07AA  3001               	movlw	1
   708  07AB                     u575:	
   709  07AB  1003               	clrc
   710  07AC  0CA2               	rrf	___ftmul@f1+2,f
   711  07AD  0CA1               	rrf	___ftmul@f1+1,f
   712  07AE  0CA0               	rrf	___ftmul@f1,f
   713  07AF  3EFF               	addlw	-1
   714  07B0  1D03               	skipz
   715  07B1  2FAB               	goto	u575
   716  07B2  3001               	movlw	1
   717  07B3                     u585:	
   718  07B3  1003               	clrc
   719  07B4  0DA3               	rlf	___ftmul@f2,f
   720  07B5  0DA4               	rlf	___ftmul@f2+1,f
   721  07B6  0DA5               	rlf	___ftmul@f2+2,f
   722  07B7  3EFF               	addlw	-1
   723  07B8  1D03               	skipz
   724  07B9  2FB3               	goto	u585
   725  07BA  3001               	movlw	1
   726  07BB  02AE               	subwf	___ftmul@cntr,f
   727  07BC  1D03               	btfss	3,2
   728  07BD  2F9A               	goto	l698
   729  07BE  3009               	movlw	9
   730  07BF  00A6               	movwf	??___ftmul
   731  07C0  0826               	movf	??___ftmul,w
   732  07C1  00AE               	movwf	___ftmul@cntr
   733  07C2                     l710:	
   734  07C2  1C20               	btfss	___ftmul@f1,0
   735  07C3  2FD2               	goto	l714
   736  07C4  0823               	movf	___ftmul@f2,w
   737  07C5  07AB               	addwf	___ftmul@f3_as_product,f
   738  07C6  0824               	movf	___ftmul@f2+1,w
   739  07C7  1103               	clrz
   740  07C8  1803               	skipnc
   741  07C9  0A24               	incf	___ftmul@f2+1,w
   742  07CA  1D03               	btfss	3,2
   743  07CB  07AC               	addwf	___ftmul@f3_as_product+1,f
   744  07CC  0825               	movf	___ftmul@f2+2,w
   745  07CD  1103               	clrz
   746  07CE  1803               	skipnc
   747  07CF  0A25               	incf	___ftmul@f2+2,w
   748  07D0  1D03               	btfss	3,2
   749  07D1  07AD               	addwf	___ftmul@f3_as_product+2,f
   750  07D2                     l714:	
   751  07D2  3001               	movlw	1
   752  07D3                     u625:	
   753  07D3  1003               	clrc
   754  07D4  0CA2               	rrf	___ftmul@f1+2,f
   755  07D5  0CA1               	rrf	___ftmul@f1+1,f
   756  07D6  0CA0               	rrf	___ftmul@f1,f
   757  07D7  3EFF               	addlw	-1
   758  07D8  1D03               	skipz
   759  07D9  2FD3               	goto	u625
   760  07DA  3001               	movlw	1
   761  07DB                     u635:	
   762  07DB  1003               	clrc
   763  07DC  0CAD               	rrf	___ftmul@f3_as_product+2,f
   764  07DD  0CAC               	rrf	___ftmul@f3_as_product+1,f
   765  07DE  0CAB               	rrf	___ftmul@f3_as_product,f
   766  07DF  3EFF               	addlw	-1
   767  07E0  1D03               	skipz
   768  07E1  2FDB               	goto	u635
   769  07E2  3001               	movlw	1
   770  07E3  02AE               	subwf	___ftmul@cntr,f
   771  07E4  1D03               	btfss	3,2
   772  07E5  2FC2               	goto	l710
   773  07E6  082B               	movf	___ftmul@f3_as_product,w
   774  07E7  00F0               	movwf	___ftpack@arg
   775  07E8  082C               	movf	___ftmul@f3_as_product+1,w
   776  07E9  00F1               	movwf	___ftpack@arg+1
   777  07EA  082D               	movf	___ftmul@f3_as_product+2,w
   778  07EB  00F2               	movwf	___ftpack@arg+2
   779  07EC  082A               	movf	___ftmul@exp,w
   780  07ED  00A6               	movwf	??___ftmul
   781  07EE  0826               	movf	??___ftmul,w
   782  07EF  00F3               	movwf	___ftpack@exp
   783  07F0  082F               	movf	___ftmul@sign,w
   784  07F1  00A7               	movwf	??___ftmul+1
   785  07F2  0827               	movf	??___ftmul+1,w
   786  07F3  00F4               	movwf	___ftpack@sign
   787  07F4  2633               	fcall	___ftpack
   788  07F5  0870               	movf	?___ftpack,w
   789  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   790  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   791  07F8  00A0               	movwf	?___ftmul
   792  07F9  0871               	movf	?___ftpack+1,w
   793  07FA  00A1               	movwf	?___ftmul+1
   794  07FB  0872               	movf	?___ftpack+2,w
   795  07FC  00A2               	movwf	?___ftmul+2
   796  07FD  0008               	return
   797  07FE                     __end_of___ftmul:	
   798                           
   799                           	psect	text3
   800  05D2                     __ptext3:	
   801 ;; *************** function ___awtoft *****************
   802 ;; Defined at:
   803 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awtoft.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;  c               2    8[COMMON] int 
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  sign            1   13[COMMON] unsigned char 
   808 ;; Return value:  Size  Location     Type
   809 ;;                  3    8[COMMON] float 
   810 ;; Registers used:
   811 ;;		wreg, status,2, status,0, pclath, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   817 ;;      Params:         3       0       0       0
   818 ;;      Locals:         1       0       0       0
   819 ;;      Temps:          2       0       0       0
   820 ;;      Totals:         6       0       0       0
   821 ;;Total ram usage:        6 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; Hardware stack levels required when called:    1
   824 ;; This function calls:
   825 ;;		___ftpack
   826 ;; This function is called by:
   827 ;;		_main
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           
   832                           ;psect for function ___awtoft
   833  05D2                     ___awtoft:	
   834                           
   835                           ;incstack = 0
   836                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
   837  05D2  01FD               	clrf	___awtoft@sign
   838  05D3  1FF9               	btfss	___awtoft@c+1,7
   839  05D4  2DDC               	goto	l670
   840  05D5  09F8               	comf	___awtoft@c,f
   841  05D6  09F9               	comf	___awtoft@c+1,f
   842  05D7  0AF8               	incf	___awtoft@c,f
   843  05D8  1903               	skipnz
   844  05D9  0AF9               	incf	___awtoft@c+1,f
   845  05DA  01FD               	clrf	___awtoft@sign
   846  05DB  0AFD               	incf	___awtoft@sign,f
   847  05DC                     l670:	
   848  05DC  0878               	movf	___awtoft@c,w
   849  05DD  00F0               	movwf	___ftpack@arg
   850  05DE  0879               	movf	___awtoft@c+1,w
   851  05DF  00F1               	movwf	___ftpack@arg+1
   852  05E0  01F2               	clrf	___ftpack@arg+2
   853  05E1  308E               	movlw	142
   854  05E2  00FB               	movwf	??___awtoft
   855  05E3  087B               	movf	??___awtoft,w
   856  05E4  00F3               	movwf	___ftpack@exp
   857  05E5  087D               	movf	___awtoft@sign,w
   858  05E6  00FC               	movwf	??___awtoft+1
   859  05E7  087C               	movf	??___awtoft+1,w
   860  05E8  00F4               	movwf	___ftpack@sign
   861  05E9  2633               	fcall	___ftpack
   862  05EA  0870               	movf	?___ftpack,w
   863  05EB  00F8               	movwf	?___awtoft
   864  05EC  0871               	movf	?___ftpack+1,w
   865  05ED  00F9               	movwf	?___awtoft+1
   866  05EE  0872               	movf	?___ftpack+2,w
   867  05EF  00FA               	movwf	?___awtoft+2
   868  05F0  0008               	return
   869  05F1                     __end_of___awtoft:	
   870                           
   871                           	psect	text4
   872  0633                     __ptext4:	
   873 ;; *************** function ___ftpack *****************
   874 ;; Defined at:
   875 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  arg             3    0[COMMON] unsigned um
   878 ;;  exp             1    3[COMMON] unsigned char 
   879 ;;  sign            1    4[COMMON] unsigned char 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;                  3    0[COMMON] float 
   884 ;; Registers used:
   885 ;;		wreg, status,2, status,0
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   891 ;;      Params:         5       0       0       0
   892 ;;      Locals:         0       0       0       0
   893 ;;      Temps:          3       0       0       0
   894 ;;      Totals:         8       0       0       0
   895 ;;Total ram usage:        8 bytes
   896 ;; Hardware stack levels used:    1
   897 ;; This function calls:
   898 ;;		Nothing
   899 ;; This function is called by:
   900 ;;		___awtoft
   901 ;;		___ftmul
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           
   906                           ;psect for function ___ftpack
   907  0633                     ___ftpack:	
   908                           
   909                           ;incstack = 0
   910                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
   911  0633  0873               	movf	___ftpack@exp,w
   912  0634  1903               	btfsc	3,2
   913  0635  2E3B               	goto	l634
   914  0636  0872               	movf	___ftpack@arg+2,w
   915  0637  0471               	iorwf	___ftpack@arg+1,w
   916  0638  0470               	iorwf	___ftpack@arg,w
   917  0639  1D03               	skipz
   918  063A  2E4E               	goto	l640
   919  063B                     l634:	
   920  063B  3000               	movlw	0
   921  063C  00F0               	movwf	?___ftpack
   922  063D  3000               	movlw	0
   923  063E  00F1               	movwf	?___ftpack+1
   924  063F  3000               	movlw	0
   925  0640  00F2               	movwf	?___ftpack+2
   926  0641  0008               	return
   927  0642                     l638:	
   928  0642  3001               	movlw	1
   929  0643  00F5               	movwf	??___ftpack
   930  0644  0875               	movf	??___ftpack,w
   931  0645  07F3               	addwf	___ftpack@exp,f
   932  0646  3001               	movlw	1
   933  0647                     u405:	
   934  0647  1003               	clrc
   935  0648  0CF2               	rrf	___ftpack@arg+2,f
   936  0649  0CF1               	rrf	___ftpack@arg+1,f
   937  064A  0CF0               	rrf	___ftpack@arg,f
   938  064B  3EFF               	addlw	-1
   939  064C  1D03               	skipz
   940  064D  2E47               	goto	u405
   941  064E                     l640:	
   942  064E  30FE               	movlw	254
   943  064F  0572               	andwf	___ftpack@arg+2,w
   944  0650  1903               	btfsc	3,2
   945  0651  2E69               	goto	l265
   946  0652  2E42               	goto	l638
   947  0653                     l642:	
   948  0653  3001               	movlw	1
   949  0654  00F5               	movwf	??___ftpack
   950  0655  0875               	movf	??___ftpack,w
   951  0656  07F3               	addwf	___ftpack@exp,f
   952  0657  3001               	movlw	1
   953  0658  07F0               	addwf	___ftpack@arg,f
   954  0659  3000               	movlw	0
   955  065A  1803               	skipnc
   956  065B  3001               	movlw	1
   957  065C  07F1               	addwf	___ftpack@arg+1,f
   958  065D  3000               	movlw	0
   959  065E  1803               	skipnc
   960  065F  3001               	movlw	1
   961  0660  07F2               	addwf	___ftpack@arg+2,f
   962  0661  3001               	movlw	1
   963  0662                     u425:	
   964  0662  1003               	clrc
   965  0663  0CF2               	rrf	___ftpack@arg+2,f
   966  0664  0CF1               	rrf	___ftpack@arg+1,f
   967  0665  0CF0               	rrf	___ftpack@arg,f
   968  0666  3EFF               	addlw	-1
   969  0667  1D03               	skipz
   970  0668  2E62               	goto	u425
   971  0669                     l265:	
   972  0669  30FF               	movlw	255
   973  066A  0572               	andwf	___ftpack@arg+2,w
   974  066B  1903               	btfsc	3,2
   975  066C  2E78               	goto	l650
   976  066D  2E53               	goto	l642
   977  066E                     l648:	
   978  066E  3001               	movlw	1
   979  066F  02F3               	subwf	___ftpack@exp,f
   980  0670  3001               	movlw	1
   981  0671                     u445:	
   982  0671  1003               	clrc
   983  0672  0DF0               	rlf	___ftpack@arg,f
   984  0673  0DF1               	rlf	___ftpack@arg+1,f
   985  0674  0DF2               	rlf	___ftpack@arg+2,f
   986  0675  3EFF               	addlw	-1
   987  0676  1D03               	skipz
   988  0677  2E71               	goto	u445
   989  0678                     l650:	
   990  0678  1BF1               	btfsc	___ftpack@arg+1,7
   991  0679  2E7E               	goto	l272
   992  067A  3002               	movlw	2
   993  067B  0273               	subwf	___ftpack@exp,w
   994  067C  1803               	skipnc
   995  067D  2E6E               	goto	l648
   996  067E                     l272:	
   997  067E  1873               	btfsc	___ftpack@exp,0
   998  067F  2E86               	goto	l273
   999  0680  30FF               	movlw	255
  1000  0681  05F0               	andwf	___ftpack@arg,f
  1001  0682  307F               	movlw	127
  1002  0683  05F1               	andwf	___ftpack@arg+1,f
  1003  0684  30FF               	movlw	255
  1004  0685  05F2               	andwf	___ftpack@arg+2,f
  1005  0686                     l273:	
  1006  0686  1003               	clrc
  1007  0687  0CF3               	rrf	___ftpack@exp,f
  1008  0688  0873               	movf	___ftpack@exp,w
  1009  0689  00F5               	movwf	??___ftpack
  1010  068A  01F6               	clrf	??___ftpack+1
  1011  068B  01F7               	clrf	??___ftpack+2
  1012  068C  3010               	movlw	16
  1013  068D                     u485:	
  1014  068D  1003               	clrc
  1015  068E  0DF5               	rlf	??___ftpack,f
  1016  068F  0DF6               	rlf	??___ftpack+1,f
  1017  0690  0DF7               	rlf	??___ftpack+2,f
  1018  0691  3EFF               	addlw	-1
  1019  0692  1D03               	skipz
  1020  0693  2E8D               	goto	u485
  1021  0694  0875               	movf	??___ftpack,w
  1022  0695  04F0               	iorwf	___ftpack@arg,f
  1023  0696  0876               	movf	??___ftpack+1,w
  1024  0697  04F1               	iorwf	___ftpack@arg+1,f
  1025  0698  0877               	movf	??___ftpack+2,w
  1026  0699  04F2               	iorwf	___ftpack@arg+2,f
  1027  069A  0874               	movf	___ftpack@sign,w
  1028  069B  1903               	btfsc	3,2
  1029  069C  0008               	return
  1030  069D  17F2               	bsf	___ftpack@arg+2,7
  1031  069E  0008               	return
  1032  069F                     __end_of___ftpack:	
  1033  007E                     btemp	set	126	;btemp
  1034  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      36
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    _main->___fttol
    ___fttol->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    4162
                                             30 BANK0      6     6      0
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                             16 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2061
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    1773
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1629
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awtoft
     ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     24      24       3       45.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sat Jan 15 20:14:49 2022

            __CFG_CP$OFF 0000              __CFG_LVP$ON 0000                      l272 067E  
                    l273 0686                      l265 0669                      l356 0713  
                    l710 07C2                      l702 07AA                      l640 064E  
                    l650 0678                      l642 0653                      l634 063B  
                    l714 07D2                      l730 06B9                      l638 0642  
                    l670 05DC                      l750 06FB                      l648 066E  
                    l680 0745                      l762 0724                      l756 0708  
                    l748 06EB                      l686 075B                      l758 0716  
                    l774 0607                      l698 079A                      u405 0647  
                    u425 0662             __CFG_CPD$OFF 0000                      u445 0671  
                    u535 0767                      u625 07D3                      u545 0779  
                    u635 07DB                      u485 068D                      u725 070A  
                    u575 07AB                      u585 07B3                      u665 06C0  
                    u695 06EC             __CFG_WDTE$ON 0000                     _main 05F1  
           ___ftpack@arg 0070             ___ftpack@exp 0073                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000            __CFG_MCLRE$ON 0000  
           ___ftmul@cntr 002E             ___ftmul@sign 002F             ___fttol@exp1 003D  
           ___fttol@lval 0039                    ?_main 0070          __end_of___ftmul 07FE  
        __end_of___fttol 072D                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086            ___awtoft@sign 007D  
          ___ftpack@sign 0074                    main@i 0042                    status 0003  
                  wtemp0 007E          __initialization 07FE             __end_of_main 0633  
                 ??_main 003E            ___fttol@sign1 0038         __end_of___awtoft 05F1  
       __end_of___ftpack 069F           __CFG_PWRTE$OFF 0000                ??___ftmul 0026  
              ??___fttol 0034    ___ftmul@f3_as_product 002B  __end_of__initialization 07FE  
             ___awtoft@c 0078               ___ftmul@f1 0020               ___ftmul@f2 0023  
             ___fttol@f1 0030           __pcstackCOMMON 0070               __pmaintext 05F1  
              ?___awtoft 0078                ?___ftpack 0070                  ___ftmul 072D  
                ___fttol 069F               ??___awtoft 007B               ??___ftpack 0075  
                __ptext1 069F                  __ptext2 072D                  __ptext3 05D2  
                __ptext4 0633     end_of_initialization 07FE                _PORTAbits 0005  
            ___ftmul@exp 002A      start_initialization 07FE        __size_of___awtoft 001F  
      __size_of___ftpack 006C                ___latbits 0000            __pcstackBANK0 0020  
               ?___ftmul 0020                 ?___fttol 0030         __size_of___ftmul 00D1  
       __size_of___fttol 008E                 ___awtoft 05D2                 ___ftpack 0633  
          __size_of_main 0042       __CFG_FOSC$EXTRCCLK 0000  
